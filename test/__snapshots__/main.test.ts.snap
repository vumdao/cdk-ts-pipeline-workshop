// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CDK workshop test Snapshot 1`] = `
{
  "Outputs": {
    "Endpoint8024A810": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EndpointEEF1FD8F",
            },
            ".execute-api.ap-southeast-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "EndpointDeploymentStageprodB78BEEA0",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EndpointANY485C938B": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloHitCounterHitCounterHandlerDAEA7B37",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "EndpointEEF1FD8F",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "EndpointANYApiPermissionTesttestingStackEndpoint57AC014EANY79956BDB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHitCounterHitCounterHandlerDAEA7B37",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:123456789012:",
              {
                "Ref": "EndpointEEF1FD8F",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointANYApiPermissiontestingStackEndpoint57AC014EANYC0E29C3E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHitCounterHitCounterHandlerDAEA7B37",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:123456789012:",
              {
                "Ref": "EndpointEEF1FD8F",
              },
              "/",
              {
                "Ref": "EndpointDeploymentStageprodB78BEEA0",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointAccountB8304247": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "EndpointEEF1FD8F",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "EndpointCloudWatchRoleC3C64E0F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "EndpointCloudWatchRoleC3C64E0F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "EndpointDeployment318525DA8fac222895650aed0d1bfb0f8d8c187f": {
      "DependsOn": [
        "EndpointproxyANYC09721C5",
        "Endpointproxy39E2174E",
        "EndpointANY485C938B",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "EndpointDeploymentStageprodB78BEEA0": {
      "DependsOn": [
        "EndpointAccountB8304247",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "EndpointDeployment318525DA8fac222895650aed0d1bfb0f8d8c187f",
        },
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "EndpointEEF1FD8F": {
      "Properties": {
        "Name": "Endpoint",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "Endpointproxy39E2174E": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "EndpointEEF1FD8F",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "EndpointproxyANYApiPermissionTesttestingStackEndpoint57AC014EANYproxy183F3F45": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHitCounterHitCounterHandlerDAEA7B37",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:123456789012:",
              {
                "Ref": "EndpointEEF1FD8F",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointproxyANYApiPermissiontestingStackEndpoint57AC014EANYproxyA8891B4E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHitCounterHitCounterHandlerDAEA7B37",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:123456789012:",
              {
                "Ref": "EndpointEEF1FD8F",
              },
              "/",
              {
                "Ref": "EndpointDeploymentStageprodB78BEEA0",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointproxyANYC09721C5": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloHitCounterHitCounterHandlerDAEA7B37",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "Endpointproxy39E2174E",
        },
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "HelloHandler2E4FBA4D": {
      "DependsOn": [
        "HelloHandlerServiceRole11EF7C63",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-ap-southeast-1",
          "S3Key": "cf0f8c9f3fee70111c4629846bd803e2d8a796861a814e4e733047958d12351b.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "HelloHandlerServiceRole11EF7C63",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloHandlerServiceRole11EF7C63": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HelloHitCounterHitCounterHandlerDAEA7B37": {
      "DependsOn": [
        "HelloHitCounterHitCounterHandlerServiceRoleDefaultPolicy1487A60A",
        "HelloHitCounterHitCounterHandlerServiceRoleD45002B8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-ap-southeast-1",
          "S3Key": "c971de934782835fca41f43e91b865a7d5eed8866de6e85aa6c4005bd342e257.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DOWNSTREAM_FUNCTION_NAME": {
              "Ref": "HelloHandler2E4FBA4D",
            },
            "HITS_TABLE_NAME": {
              "Ref": "HelloHitCounterHits7AAEBF80",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "HelloHitCounterHitCounterHandlerServiceRoleD45002B8",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloHitCounterHitCounterHandlerServiceRoleD45002B8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HelloHitCounterHitCounterHandlerServiceRoleDefaultPolicy1487A60A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HelloHitCounterHits7AAEBF80",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HelloHandler2E4FBA4D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HelloHandler2E4FBA4D",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "HelloHitCounterHitCounterHandlerServiceRoleDefaultPolicy1487A60A",
        "Roles": [
          {
            "Ref": "HelloHitCounterHitCounterHandlerServiceRoleD45002B8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HelloHitCounterHits7AAEBF80": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "path",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "path",
            "KeyType": "HASH",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
